// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VirtualVisaCenter.API.Data;

#nullable disable

namespace VirualVisaCenter.API.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20240528234704_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Agenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Remarks")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("RequestId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RequestId");

                    b.ToTable("Agendas");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Capital")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.CriminalRecord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("CriminalRecord");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CellPhone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Embassy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ambassador")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("OfficeHours")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("countryId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("countryId");

                    b.ToTable("Embassies");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Rate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CountryId")
                        .HasColumnType("int");

                    b.Property<int?>("TypeVIsaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("TypeVIsaId");

                    b.ToTable("Rates");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Request", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Attachments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Comments")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("EmbassyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RequestDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("RequestType")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("TypeVIsaId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmbassyId");

                    b.HasIndex("TypeVIsaId");

                    b.ToTable("Requests");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.TypeVIsa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("TypeVIsas");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Agenda", b =>
                {
                    b.HasOne("VirtualVisaCenter.Shared.Entities.Request", "Request")
                        .WithMany("Agenda")
                        .HasForeignKey("RequestId");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.CriminalRecord", b =>
                {
                    b.HasOne("VirtualVisaCenter.Shared.Entities.Customer", "Customer")
                        .WithMany("CriminalRecord")
                        .HasForeignKey("CustomerId");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Embassy", b =>
                {
                    b.HasOne("VirtualVisaCenter.Shared.Entities.Country", "country")
                        .WithMany("Embassy")
                        .HasForeignKey("countryId");

                    b.Navigation("country");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Rate", b =>
                {
                    b.HasOne("VirtualVisaCenter.Shared.Entities.Country", "Country")
                        .WithMany("Rate")
                        .HasForeignKey("CountryId");

                    b.HasOne("VirtualVisaCenter.Shared.Entities.TypeVIsa", "TypeVIsa")
                        .WithMany("Rate")
                        .HasForeignKey("TypeVIsaId");

                    b.Navigation("Country");

                    b.Navigation("TypeVIsa");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Request", b =>
                {
                    b.HasOne("VirtualVisaCenter.Shared.Entities.Customer", "Customer")
                        .WithMany("Request")
                        .HasForeignKey("CustomerId");

                    b.HasOne("VirtualVisaCenter.Shared.Entities.Embassy", "Embassy")
                        .WithMany("Requests")
                        .HasForeignKey("EmbassyId");

                    b.HasOne("VirtualVisaCenter.Shared.Entities.TypeVIsa", "TypeVIsa")
                        .WithMany("Request")
                        .HasForeignKey("TypeVIsaId");

                    b.Navigation("Customer");

                    b.Navigation("Embassy");

                    b.Navigation("TypeVIsa");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Country", b =>
                {
                    b.Navigation("Embassy");

                    b.Navigation("Rate");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Customer", b =>
                {
                    b.Navigation("CriminalRecord");

                    b.Navigation("Request");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Embassy", b =>
                {
                    b.Navigation("Requests");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.Request", b =>
                {
                    b.Navigation("Agenda");
                });

            modelBuilder.Entity("VirtualVisaCenter.Shared.Entities.TypeVIsa", b =>
                {
                    b.Navigation("Rate");

                    b.Navigation("Request");
                });
#pragma warning restore 612, 618
        }
    }
}
